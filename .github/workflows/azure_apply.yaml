name: 'Terraform Deploy using OIDC'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC
      contents: read   # Default permissions for actions/checkout

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: d385aa71-0f89-4204-964c-2cbb4322fcc0
        tenant-id: 4c470cc0-914e-41d8-b3f2-2812cb01d186
        subscription-id: 6e5394a9-f79c-4c60-9252-45d6d4a0f88c

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    # Step to force unlock Terraform state if it's locked
    - name: Force Unlock Terraform State
      working-directory: ./azure-infra
      run: terraform force-unlock ec7ea770-97e3-8a9d-c494-f5aef09c02e6 || true  # Unlock if locked, continue if not locked

    - name: Terraform Init
      working-directory: ./azure-infra
      run: terraform init

    - name: Terraform Plan
      working-directory: ./azure-infra
      env:
        TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}  # Use GitHub secrets to pass sensitive info
        TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: terraform plan

    - name: Terraform Apply
      working-directory: ./azure-infra
      run: terraform apply -auto-approve

name: Terraform Workflow Demo

on:
  push:
    branches: [ "main" ]
    paths:
      - 'gcp-infra/environments/prod/**'
      - '.github/workflows/terraform.yaml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'gcp-infra/environments/prod/**'
      - '.github/workflows/terraform.yaml'
  workflow_dispatch:  # Allows manual triggering of the workflow, including destroy
    inputs:
      destroy:
        description: 'Run terraform destroy'
        required: false
        default: 'false'

jobs:
  terraform:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.destroy == 'false' }}
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Decrypt terraform.tfvars.gpg.b64
        env:
          TERRAFORM_TFVARS_ENCRYPTED: ${{ secrets.TERRAFORM_TFVARS_ENCRYPTED }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "${TERRAFORM_TFVARS_ENCRYPTED}" | base64 --decode > gcp-infra/environments/prod/terraform.tfvars.gpg
          gpg --batch --yes --passphrase="${GPG_PASSPHRASE}" --output gcp-infra/environments/prod/terraform.tfvars --decrypt gcp-infra/environments/prod/terraform.tfvars.gpg
          rm gcp-infra/environments/prod/terraform.tfvars.gpg

      - name: Verify terraform.tfvars exists
        run: ls -al gcp-infra/environments/prod/

      - name: Output terraform.tfvars content for debugging
        run: cat gcp-infra/environments/prod/terraform.tfvars

      - name: Set permissions on terraform.tfvars
        run: chmod 644 gcp-infra/environments/prod/terraform.tfvars

      - id: 'plannerAuth'
        if: github.ref != 'refs/heads/main'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          workload_identity_provider: 'projects/664946097791/locations/global/workloadIdentityPools/aitdevops-pool/providers/aitdevops-pool'
          service_account: 'aitdevops-tf-plan@devops-projects-426703.iam.gserviceaccount.com'

      - id: 'applierAuth'
        if: github.ref == 'refs/heads/main'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          workload_identity_provider: 'projects/664946097791/locations/global/workloadIdentityPools/aitdevops-pool/providers/aitdevops-pool'
          service_account: 'aitdevops-tf-apply@devops-projects-426703.iam.gserviceaccount.com'

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      # - id: init
      #   name: Terraform Init
      #   working-directory: gcp-infra/environments/prod
      #   run: terraform init -input=false -backend-config="prefix=terraform-demo" -backend-config="bucket=terraform-state-aitdevops-env"

      # - id: validate
      #   name: Terraform Validate
      #   working-directory: gcp-infra/environments/prod
      #   run: terraform validate -no-color

      # - id: plan
      #   name: Terraform Plan
      #   working-directory: gcp-infra/environments/prod
      #   run: terraform plan -var-file=terraform.tfvars -no-color
      #   continue-on-error: true

      # - uses: actions/github-script@v6
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "${{ steps.plan.outputs.stdout }}"
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `
      #       #### Terraform Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
      #       #### Terraform Validation ü§ñ \`${{ steps.validate.outcome }}\`
      #       #### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`
            
      #       <details><summary>Show Plan</summary>
            
      #       \`\`\`
      #       ${process.env.PLAN}
      #       \`\`\`
            
      #       </details>
            
      #       *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })

      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   working-directory: gcp-infra/environments/prod
      #   run: terraform apply -var-file=terraform.tfvars -auto-approve -input=false

  destroy:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Decrypt terraform.tfvars.gpg.b64
        env:
          TERRAFORM_TFVARS_ENCRYPTED: ${{ secrets.TERRAFORM_TFVARS_ENCRYPTED }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "${TERRAFORM_TFVARS_ENCRYPTED}" | base64 --decode > gcp-infra/environments/prod/terraform.tfvars.gpg
          gpg --batch --yes --passphrase="${GPG_PASSPHRASE}" --output gcp-infra/environments/prod/terraform.tfvars --decrypt gcp-infra/environments/prod/terraform.tfvars.gpg
          rm gcp-infra/environments/prod/terraform.tfvars.gpg

      - name: Set permissions on terraform.tfvars
        run: chmod 644 gcp-infra/environments/prod/terraform.tfvars

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          workload_identity_provider: 'projects/664946097791/locations/global/workloadIdentityPools/aitdevops-pool/providers/aitdevops-pool'
          service_account: 'aitdevops-tf-apply@devops-projects-426703.iam.gserviceaccount.com'

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Init for Destroy
        working-directory: gcp-infra/environments/prod
        run: terraform init -input=false -backend-config="prefix=terraform-demo" -backend-config="bucket=terraform-state-aitdevops-env"

      - name: Terraform Destroy
        working-directory: gcp-infra/environments/prod
        run: terraform destroy -var-file=terraform.tfvars -auto-approve -input=false
